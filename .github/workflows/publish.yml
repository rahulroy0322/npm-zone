name: 🚀 Npm-Zone — CI/CD Pipeline

on:
  push:
    branches: 
      - publish

permissions:
  contents: write

jobs:
  preflight-check:
    name: 🛫 Preflight Version Check
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: 🧭 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ⚙️ Initialize Node.js Runtime
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: 🔖 Extract Package Version
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "📦 Current version: $VERSION"

      - name: 🕵️‍♂️ Validate Version Tag Uniqueness
        run: |
          VERSION=${{ steps.version.outputs.version }}
          if git rev-parse "v$VERSION" >/dev/null 2>&1; then
            echo "⏭️ Skipping publish - version $VERSION already exists"
            echo "⚠️ To publish a new version, update the version in package.json first"
            exit 1
          else
            echo "✅ New version v$VERSION detected — proceeding"
          fi
     
  qa-verification:
    name: 🧪 Quality Assurance Verification
    runs-on: ubuntu-latest
    needs: preflight-check
    steps:
      - name: 🧭 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: ⚙️ Initialize Node.js Runtime
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: 📦 Install Dependencies
        run: npm install

      - name: 🧪 Execute Test Suite
        run: npm test

  release-publish:
    name: 🚀 Release & Publish to NPM
    runs-on: ubuntu-latest
    needs: 
      - preflight-check
      - qa-verification
    steps:
      - name: 🧭 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: ⚙️ Initialize Node.js Runtime
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
      
      - name: 📦 Install Dependencies
        run: npm install
          
      - name: 🚀 Publish Package to NPM
        run: npm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.TOKEN }}

      - name: 🏷️ Generate Git Tag
        run: |
          VERSION=${{ needs.preflight-check.outputs.version }}     
          git config --local user.email "action[bot]@github.com"
          git config --local user.name "GitHub Action 🤖"
          git tag -a "v$VERSION" -m "🤖 Build Tag: $VERSION"
          git push origin "v$VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🚀 Generate GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.preflight-check.outputs.version }}
          release_name: 📦 Release v${{ needs.preflight-check.outputs.version }}
          body: |
            ## 📦 Changes in v${{ needs.preflight-check.outputs.version }}

            🔄 Auto-generated release from publish branch.
          draft: false
          prerelease: false

      - name: 🎉 Deployment Summary
        run: |
          echo "✅ Successfully published version v${{ needs.preflight-check.outputs.version }} to NPM"
          echo "🏷️ Created git tag v${{ needs.preflight-check.outputs.version }}"
          echo "🚀 Created GitHub release"
